{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/feed.js","tweets/create.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.27ad58f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  \n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken')\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  if(csrftoken){\n    //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\",\"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-REQUESTED-WITH\",\"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\",csrftoken)\n  }\n  xhr.onload = function() {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail\n      if (detail === \"Authentication credentials were not provided.\"){\n        if (window.location.href.indexOf(\"login\") === -1) {\n          window.location.href = \"/login?showLoginRequired=true\"\n        }\n      }\n    }\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    console.log(e)\n    callback({\"message\": \"The request was an error from component.js/lookup\"}, 400)\n  }\n  xhr.send(jsonData)\n}\n","\nimport {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback){\n    backendLookup(\"POST\", \"/babbles/create\", callback, {content: newTweet})\n  }\n  \nexport function apiTweetAction(tweetId, action, callback){\n  const data = {id: tweetId, action: action}\n  backendLookup(\"POST\", \"/babbles/action\", callback, data)\n}\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/babbles/${tweetId}`, callback)\n}\nexport function apiTweetFeed(callback, nextUrl) {\n  let endpoint =  \"/babbles/feed/\"\n  if (nextUrl !== null && nextUrl !== undefined) {\n      endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n  }\n  backendLookup(\"GET\", endpoint, callback)\n}\n\n\nexport function apiTweetList(username, callback,nextUrl) {\n  let endpoint =  \"/babbles/\"\n  if (username){\n      endpoint =  `/babbles/?username=${username}`\n  }\n  if (nextUrl !== null && nextUrl !== undefined) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n  }\n\n  backendLookup(\"GET\", endpoint, callback)\n}","import React from 'react'\n\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleActionBackendEvent = (response, status) =>{\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction){\n        didPerformAction(response, status)\n      }\n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  } ","import React from 'react'\n\nexport function UserLink (props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href= `/profiles/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n      {props.children}\n  </span>\n}\n\n\nexport  function UserDisplay(props){\n  const {user, includeFullName, hideLink} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n  return <React.Fragment>\n    {nameDisplay}\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n \n  </React.Fragment>\n}\n\nexport  function UserPicture (props) {\n  const {user, hideLink} = props\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n  {user.username[0]}\n</span>\n  return  hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n}","import React from 'react'\nimport numeral from 'numeral'\n\n\nexport function DisplayCount(props) {\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n}\n","import React, {useEffect, useState} from 'react'\nimport {DisplayCount} from './utils'\nimport {UserDisplay, UserPicture} from './components'\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\n\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowToggle = (event) => {\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n        <UserPicture user={user} hideLink />\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"} </p>\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\n        <p>{user.location}</p>\n        <p>{user.bio}</p>\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\n    </div> : null\n}\n\nexport function ProfileBadgeComponent (props) {\n    const {username} = props\n    // lookup\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n    const handleBackendLookup = (response, status) => {\n      if (status === 200) {\n        setProfile(response)\n      }\n    }\n    useEffect(()=>{\n      if (didLookup === false){\n        apiProfileDetail(username, handleBackendLookup)\n        setDidLookup(true)\n      }\n    }, [username, didLookup, setDidLookup])\n    \n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\n            // console.log(response, status)\n            if (status===200) {\n                setProfile(response)\n                // apiProfileDetail(username, handleBackendLookup)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n\n    }\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\n}","import {backendLookup} from '../lookup'\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\n} \n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {action: `${action && action}`.toLowerCase()}\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\n}","\nimport React, {useState}  from 'react'\n\nimport {ActionBtn} from './buttons'\nimport {\n  UserDisplay,\n  UserPicture\n} from '../profiles'\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\n  }\n  export function Tweet(props) {\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\n      const path = window.location.pathname\n      const match = path.match(/(?<tweetid>\\d+)/)\n      const urlTweetId = match ? match.groups.tweetid : -1\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\n      \n      const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n      }\n      const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200){\n          setActionTweet(newActionTweet)\n        } else if (status === 201) {\n          if (didRetweet){\n            didRetweet(newActionTweet)\n          }\n        }\n        \n      }\n      \n      return <div className={className}>\n         {isRetweet === true && <div className='mb-2'>         \n         <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\n        </div>}\n        <div className='d-flex'>\n       \n          <div className=''>\n          <UserPicture user={tweet.user} />\n          </div>\n          <div className='col-11'>\n              <div>\n             \n                <p>\n                <UserDisplay includeFullName user={tweet.user} />\n                </p>\n                <p>{tweet.content}</p>\n               \n                <ParentTweet tweet={tweet} retweeter={tweet.user} />\n              </div>\n          <div className='btn btn-group px-0'>\n          {(actionTweet && hideActions !== true) && <React.Fragment>\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\n                </React.Fragment>\n          }\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n                </div>\n                </div>\n      </div>\n      </div>\n    }","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetFeed} from './lookup'\n\nimport {Tweet} from './detail'\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          }\n        }\n        apiTweetFeed(handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) =>{\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          }\n        }\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet  \n        tweet={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })}\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n  }\n\n","import React from 'react'\nimport {apiTweetCreate} from './lookup'\n\n\nexport function TweetCreate(props){\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n    const handleBackendUpdate = (response, status) =>{\n      if (status === 201){\n        didTweet(response)\n      } else {\n        console.log(response)\n        alert(\"An error occured please try again\")\n      }\n    }\n\n    const handleSubmit = (event) => {\n      event.preventDefault()\n      const newVal = textAreaRef.current.value\n      // backend api request\n      apiTweetCreate(newVal, handleBackendUpdate)\n      textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n          <form onSubmit={handleSubmit}>\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n        </form>\n  </div>\n} ","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetList} from './lookup'\n\nimport {Tweet} from './detail'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) =>{\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet  \n        tweet={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })}\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n  }","import React, {useEffect, useState}  from 'react'\nimport {Tweet} from './detail'\nimport {apiTweetDetail} from './lookup'\nimport {FeedList} from './feed'\nimport {TweetCreate} from './create'\nimport {TweetsList} from './list'\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) =>{\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <FeedList newTweets={newTweets} {...props} />\n  </div>\n}\n\n\nexport function TweetsComponent(props) {\n\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleNewTweet = (newTweet) =>{\n      let tempNewTweets = [...newTweets]\n      tempNewTweets.unshift(newTweet)\n      setNewTweets(tempNewTweets)\n    }\n    return <div className={props.className}>\n      {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n          <TweetsList newTweets={newTweets} {...props} />\n          </div>\n  }\n  \n  export function TweetDetailComponent(props){\n    const {tweetId} = props\n    const [didLookup, setDidLookup] = useState(false)\n    const [tweet, setTweet] = useState(null)\n  \n    const handleBackendLookup = (response, status) => {\n      if (status === 200) {\n        setTweet(response)\n      } else {\n        alert(\"There was an error finding your tweet.\")\n      }\n    }\n    useEffect(()=>{\n      if (didLookup === false){\n  \n        apiTweetDetail(tweetId, handleBackendLookup)\n        setDidLookup(true)\n      }\n    }, [tweetId, didLookup, setDidLookup])\n  \n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n   } \n   ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {TweetsComponent} from './tweets'\n\n\nfunction App(){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div> \n          <TweetsComponent/>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"," \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles'\nimport {FeedComponent,TweetsComponent, TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"babble\")\nif (tweetsEl) {\n    ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"babble-feed\")\nif (tweetFeedEl) {\n    ReactDOM.render(\n        e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".Babble-detail\")\n\ntweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), \n        container);\n})\nconst userProfileBadgeElements = document.querySelectorAll(\".babble-profile-badge\")\n\nuserProfileBadgeElements.forEach(container=> {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset), \n        container);\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}